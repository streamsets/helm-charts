{{- $externalPort := include "externalPort" . }}
{{- range $deployment := .Values.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "control-hub.fullname" $ }}-{{ $deployment.name | replace "_" "-" }}"
  labels:
    app.kubernetes.io/name: {{ $deployment.name | quote }}
    app.kubernetes.io/part-of: {{ include "control-hub.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    helm.sh/chart: {{ include "control-hub.chart" $ }}
spec:
  replicas: {{ $deployment.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $deployment.name | quote }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
      app.kubernetes.io/part-of: {{ include "control-hub.name" $ }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $deployment.name | quote }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/part-of: {{ include "control-hub.name" $ }}
    spec:
      initContainers:
      - name: init-mysql
        image: mysql
        env:
        - name: DB_USER
          value: "{{ $.Values.mysql.mysqlRootUser }}"
        {{- if $.Values.mysql.mysqlRootPassword }}
        - name: DB_PASSWORD
          value: "{{ $.Values.mysql.mysqlRootPassword }}"
        {{- else }}
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "mysql.fullname" $ }}
              key: mysql-root-password
        {{- end }}
        - name: DB_HOST
        {{- if $.Values.mysql.mysqlHost }}
          value: "{{ $.Values.mysql.mysqlHost }}"
        {{- else }}
          value: "{{ template "mysql.fullname" $ }}.{{ $.Release.Namespace }}.svc.cluster.local"
        {{- end}}
        - name: DB_PORT
          value: "{{ $.Values.mysql.mysqlPort }}"
        command: ['sh', '-c', 'mysql -w --connect-timeout=5 -s -N -h"${DB_HOST}" -P"${DB_PORT}" -u"${DB_USER}" -p"${DB_PASSWORD}" -e "SELECT USER()"']
      {{- if $.Values.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ $.Values.image.pullSecret }}"
      {{- end }}
      containers:
        - name: haveged
          image: "harbur/haveged:1.7c-1"
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add: ["SYS_ADMIN"]
        - name: {{ $deployment.name | replace "_" "-" }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: {{ $.Values.security.asUser }}
            fsGroup: {{ $.Values.security.fsGroup }}
          env:
          {{- range $key, $val := $deployment.container.env }}
          - name: {{ $key }}
            value: "{{ $val }}"
          {{- end }}
          - name: INIT_SECURITY
            value: "true"
          - name: DPM_CONF_APPS_TO_START
            value: {{ $deployment.appsToStart }}
          {{- range $app := $.Values.apps }}
          - name: "DPM_CONF_DPM_APP_{{ $app.name | upper }}_URL"
            value: "{{ $.Values.appProto }}://{{ include "control-hub.fullname" $ }}-{{ $app.name | replace "_" "-" }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.service.port }}"
          {{- end }}
          - name: DPM_CONF_DPM_BASE_URL
            value: "{{ $.Values.ingress.proto }}://{{ $.Values.ingress.host }}.{{ $.Values.ingress.domain }}{{ $externalPort }}"
          - name: DPM_CONF_DB_URL
          {{- if $.Values.influxdb.config.http.bind_host }}
            value: "{{ $.Values.influxdb.proto }}://{{ $.Values.influxdb.config.http.bind_host }}:{{ $.Values.influxdb.config.http.bind_address }}"
          {{- else }}
            value: "{{ $.Values.influxdb.proto }}://{{ template "influxdb.fullname" $ }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.influxdb.config.http.bind_address }}"
          {{- end }}
          - name: DPM_CONF_DB_NAME
            value: "dpm"
          - name: DPM_CONF_DB_USER
            value: {{ $.Values.schInfluxUser }}
          {{- if $.Values.schInfluxPassword }}
          - name: DPM_CONF_DB_PASSWORD
            value: {{ $.Values.schInfluxPassword }}
          {{- else }}
          - name: DPM_CONF_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ include "control-hub.fullname" $ }}"
                key: influxdb-password
          {{- end}}
          - name: DPM_CONF_DPM_APP_DB_URL
          {{- if $.Values.influxdb.config.http.bind_host }}
            value: "{{ $.Values.influxdb.proto }}://{{ $.Values.influxdb.config.http.bind_host }}:{{ $.Values.influxdb.config.http.bind_address }}"
          {{- else }}
            value: "{{ $.Values.influxdb.proto }}://{{ template "influxdb.fullname" $ }}.{{ $.Release.Namespace }}.svc.cluster.local:{{ $.Values.influxdb.config.http.bind_address }}"
          {{- end }}
          - name: DPM_CONF_DPM_APP_DB_NAME
            value: "dpm_app"
          - name: DPM_CONF_DPM_APP_DB_USER
            value: {{ $.Values.schInfluxUser }}
          - name: DPM_CONF_DPM_APP_DB_PASSWORD
          {{- if $.Values.schInfluxPassword}}
            value: "{{ $.Values.schInfluxPassword }}"
          {{- else }}
            valueFrom:
              secretKeyRef:
                name: "{{ include "control-hub.fullname" $ }}"
                key: influxdb-password
          {{- end }}
          - name: DB_USER
            value: "{{ $.Values.mysql.mysqlRootUser }}"
          - name: DB_PASSWORD
          {{- if $.Values.mysql.mysqlRootPassword }}
            value: "{{ $.Values.mysql.mysqlRootPassword }}"
          {{- else }}
            valueFrom:
              secretKeyRef:
                name: {{ template "mysql.fullname" $ }}
                key: mysql-root-password
          {{- end }}
          - name: DB_HOST
          {{- if $.Values.mysql.mysqlHost }}
            value: "{{ $.Values.mysql.mysqlHost }}"
          {{- else }}
            value: "{{ template "mysql.fullname" $ }}.{{ $.Release.Namespace }}.svc.cluster.local"
          {{- end}}
          - name: DB_PORT
            value: "{{ $.Values.mysql.mysqlPort }}"
          - name: DPM_ADMIN_APP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ include "control-hub.fullname" $ }}"
                key: admin-password
          - name: DPM_CONF_PIPELINE_DESIGNER_SYSTEM_SDC_URL
            value: "http://{{ include "control-hub.fullname" $ }}-system-dc.{{ $.Release.Namespace }}.svc.cluster.local:18630"
          - name: DPM_CONF_MAIL_TRANSPORT_PROTOCOL
            value: {{ default "smtp" $.Values.mailProtocol }}
          - name: DPM_CONF_MAIL_SMTP_HOST
            value: {{ default "none" $.Values.mailHost }}
          - name: DPM_CONF_MAIL_SMTP_PORT
            value: {{ default "587" $.Values.mailPort | quote }}
          - name: DPM_CONF_MAIL_SMTP_STARTTLS_ENABLE
            value: {{ default "true" $.Values.mailStarttls | quote }}
          - name: DPM_CONF_MAIL_SMTP_AUTH
          {{- if $.Values.mailUsername }}
            value: {{ "true" | quote }}
          {{- else }}
            value: {{ "false" | quote }}
          {{- end }}
          - name: DPM_CONF_MAIL_SMTPS_HOST
            value: {{ default "none" $.Values.mailHost }}
          - name: DPM_CONF_MAIL_SMTPS_PORT
            value: {{ default "465" $.Values.mailPort | quote }}
          - name: DPM_CONF_MAIL_SMTPS_AUTH
          {{- if $.Values.mailUsername }}
            value: {{ "true" | quote }}
          {{- else }}
            value: {{ "false" | quote }}
          {{- end }}
          - name: DPM_CONF_XMAIL_USERNAME
            value: {{ $.Values.mailUsername }}
          {{- if $.Values.mailUsername }}
          - name: DPM_CONF_XMAIL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ include "control-hub.fullname" $ }}"
                key: mail-password
          {{- end }}
          - name: DPM_CONF_XMAIL_FROM_ADDRESS
            value: {{ default "no-reply@streamsets.com" $.Values.mailFromAddress }}
          {{- if $.Values.ldap.enabled }}
          - name: DPM_CONF_LDAP_HOSTNAME
            value: {{ $.Values.ldap.host }}
          - name: DPM_CONF_LDAP_PORT
            value: {{ $.Values.ldap.port | quote }}
          - name: DPM_CONF_LDAP_LDAPS
            value: {{ $.Values.ldap.ldaps | quote }}
          - name: DPM_CONF_LDAP_L_ldap_startTLS
            value: {{ $.Values.ldap.startTLS | quote }}
          - name: DPM_CONF_LDAP_L_ldap_userBaseDn
            value: {{ $.Values.ldap.userBaseDn }}
          - name: DPM_CONF_LDAP_L_ldap_userObjectClass
            value: {{ $.Values.ldap.userObjectClass }}
          - name: DPM_CONF_LDAP_L_ldap_userNameAttribute
            value: {{ $.Values.ldap.userNameAttribute }}
          - name: DPM_CONF_LDAP_L_ldap_userEmailAttribute
            value: {{ $.Values.ldap.userEmailAttribute }}
          - name: DPM_CONF_LDAP_L_ldap_userFullNameAttribute
            value: {{ $.Values.ldap.userFullNameAttribute }}
          - name: DPM_CONF_LDAP_L_ldap_userFilter
            value: {{ $.Values.ldap.userFilter | quote }}
          - name: DPM_CONF_LDAP_L_ldap_bindDn
            value: {{ $.Values.ldap.bindDn }}
          - name: DPM_CONF_LDAP_L_ldap_bindPassword
            value: {{ $.Values.ldap.bindPassword | quote }}
          - name: DPM_CONF_LDAP_L_ldap_fetchGroups
            value: {{ $.Values.ldap.fetchGroups | quote }}
          - name: DPM_CONF_LDAP_L_ldap_groupBaseDn
            value: {{ $.Values.ldap.groupBaseDn }}
          - name: DPM_CONF_LDAP_L_ldap_groupObjectClass
            value: {{ $.Values.ldap.groupObjectClass }}
          - name: DPM_CONF_LDAP_L_ldap_groupMemberAttribute
            value: {{ $.Values.ldap.groupMemberAttribute }}
          - name: DPM_CONF_LDAP_L_ldap_groupNameAttribute
            value: {{ $.Values.ldap.groupNameAttribute }}
          - name: DPM_CONF_LDAP_L_ldap_groupFullNameAttribute
            value: {{ $.Values.ldap.groupFullNameAttribute }}
          - name: DPM_CONF_LDAP_L_ldap_groupFilter
            value: {{ $.Values.ldap.groupFilter | quote }}
          {{- end }}
          ports:
          - name: http
            containerPort: {{ $.Values.service.port }}
          - name: http-admin
            containerPort: {{ $.Values.service.adminPort }}
          livenessProbe:
            exec:
              command:
              - curl
              - -f
              - http://localhost:18631/public-rest/v1/health
            initialDelaySeconds: 180
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - curl
              - -f
              - http://localhost:18631/public-rest/v1/health
            initialDelaySeconds: 180
            timeoutSeconds: 1
          resources:
{{ toYaml $.Values.resources | indent 12 }}
    {{- if $.Values.nodeSelector }}
      nodeSelector:
{{ toYaml $.Values.nodeSelector | indent 8 }}
    {{- end }}
{{- end }}
