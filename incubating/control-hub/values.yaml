# Default values for Control Hub
image:
  repository: streamsets/control-hub
  tag: 3.13.0
  pullPolicy: IfNotPresent
  pullSecret:  # set to a secret name containing any necessary private registry credentials
  dev: false   # set to true if deploying developer builds rather than production builds
service:
  type: ClusterIP
  port: 18631
  adminPort: 18632
ingress:
  enabled: true
  proto: https
  # Used to create an Ingress record.
  domain: example.com
  host: streamsets
  annotations:
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/rewrite-target: /
    # kubernetes.io/ingress.allow-http: "true"
    # kubernetes.io/ingress.class: traefik
istio:
  # set to true to use configure Istio Gateway + VirtualService instead of Ingress
  # requires that the target namespace has automatic sidecar injection enabled
  enabled: false
  mTLS: PERMISSIVE

systemDataCollector:
  enabled: true
  image:
    repository: streamsets/datacollector
    tag: latest
    pullPolicy: IfNotPresent
  resources: {}
  nodeSelector: {}

##
## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
nodeSelector: {}

##
## Control Hub Configuration
##
common:
  env: &COMMON_ENV
    DPM_JAVA_OPTS: "-Xms128m -Xmx512m"

appProto: http
apps:
  - name: security
    deployment: security
    priority: "-7"
  - name: pipelinestore
    deployment: pipelinestore
    priority: "-3"
  - name: messaging
    deployment: messaging
    priority: "-4"
  - name: jobrunner
    deployment: jobrunner
    priority: "-3"
  - name: timeseries
    deployment: timeseries
    priority: "-3"
  - name: topology
    deployment: topology
    priority: "-3"
  - name: notification
    deployment: notification
    priority: "-3"
  - name: sla
    deployment: sla
    priority: "-3"
  - name: policy
    deployment: policy
    priority: "-3"
  - name: provisioning
    deployment: provisioning
    priority: "-3"
  - name: scheduler
    deployment: scheduler
    priority: "-3"
  - name: sdp_classification
    deployment: sdp_classification
    priority: "-3"
  - name: reporting
    deployment: reporting
    priority: "-3"

deployments:
  - name: security
    appsToStart: "security"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: pipelinestore
    appsToStart: "pipelinestore"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: messaging
    appsToStart: "messaging"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: jobrunner
    appsToStart: "jobrunner"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: timeseries
    appsToStart: "timeseries"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: topology
    appsToStart: "topology"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: notification
    appsToStart: "notification"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: sla
    appsToStart: "sla"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: policy
    appsToStart: "policy"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: provisioning
    appsToStart: "provisioning"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: scheduler
    appsToStart: "scheduler"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: sdp_classification
    appsToStart: "sdp_classification"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV
  - name: reporting
    appsToStart: "reporting"
    replicaCount: 1
    container:
      env:
        <<: *COMMON_ENV

adminPassword:  # default is random password
schInfluxUser: streamsets
schInfluxPassword:  # default is random password

##
## MySQL chart configuration
##
mysql:
  enabled: true
  mysqlHost:  # default is svc.cluster.local
  mysqlPort: 3306
  mysqlRootUser: root
  mysqlRootPassword:  # default is random password -- you cannot currently scale when using random
  mysqlUser: streamsets
  mysqlPassword:  # default is random password
  persistence:
    enabled: true
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 8Gi
  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
  configurationFiles:
    mysql_dpm.cnf: |-
      [mysqld]
      character-set-server=utf8
      collation-server=utf8_general_ci
      lower_case_table_names=0
  initializationFiles:
    create-schemas.sql: |-
      CREATE DATABASE IF NOT EXISTS security;
      CREATE DATABASE IF NOT EXISTS pipelinestore;
      CREATE DATABASE IF NOT EXISTS messaging;
      CREATE DATABASE IF NOT EXISTS jobrunner;
      CREATE DATABASE IF NOT EXISTS topology;
      CREATE DATABASE IF NOT EXISTS notification;
      CREATE DATABASE IF NOT EXISTS sla;
      CREATE DATABASE IF NOT EXISTS timeseries;
      CREATE DATABASE IF NOT EXISTS policy;
      CREATE DATABASE IF NOT EXISTS provisioning;
      CREATE DATABASE IF NOT EXISTS reporting;
      CREATE DATABASE IF NOT EXISTS scheduler;
      CREATE DATABASE IF NOT EXISTS sdp_classification;
  ssl:
    enabled: false
##
## InfluxDB chart configuration
##
influxdb:
  proto: http
  enabled: true
  image:
    tag: "1.3"
  persistence:
    enabled: true
    size: 8Gi
  config:
    reporting_disabled: true
    http:
      bind_address: 8086
